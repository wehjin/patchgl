use ::window::VirtualKeyCode;

pub fn code_to_string(keycode: VirtualKeyCode) -> Option<String> {
    match keycode {
        VirtualKeyCode::A => Some("a".into()),
        VirtualKeyCode::B => Some("b".into()),
        VirtualKeyCode::C => Some("c".into()),
        VirtualKeyCode::D => Some("d".into()),
        VirtualKeyCode::E => Some("e".into()),
        VirtualKeyCode::F => Some("f".into()),
        VirtualKeyCode::G => Some("g".into()),
        VirtualKeyCode::H => Some("h".into()),
        VirtualKeyCode::I => Some("i".into()),
        VirtualKeyCode::J => Some("j".into()),
        VirtualKeyCode::K => Some("k".into()),
        VirtualKeyCode::L => Some("l".into()),
        VirtualKeyCode::M => Some("m".into()),
        VirtualKeyCode::N => Some("n".into()),
        VirtualKeyCode::O => Some("o".into()),
        VirtualKeyCode::P => Some("p".into()),
        VirtualKeyCode::Q => Some("q".into()),
        VirtualKeyCode::R => Some("r".into()),
        VirtualKeyCode::S => Some("s".into()),
        VirtualKeyCode::T => Some("t".into()),
        VirtualKeyCode::U => Some("u".into()),
        VirtualKeyCode::V => Some("v".into()),
        VirtualKeyCode::W => Some("w".into()),
        VirtualKeyCode::X => Some("x".into()),
        VirtualKeyCode::Y => Some("y".into()),
        VirtualKeyCode::Z => Some("z".into()),
        VirtualKeyCode::Key0 => Some("0".into()),
        VirtualKeyCode::Key1 => Some("1".into()),
        VirtualKeyCode::Key2 => Some("2".into()),
        VirtualKeyCode::Key3 => Some("3".into()),
        VirtualKeyCode::Key4 => Some("4".into()),
        VirtualKeyCode::Key5 => Some("5".into()),
        VirtualKeyCode::Key6 => Some("6".into()),
        VirtualKeyCode::Key7 => Some("7".into()),
        VirtualKeyCode::Key8 => Some("8".into()),
        VirtualKeyCode::Key9 => Some("9".into()),
        VirtualKeyCode::Space => Some(" ".into()),
        VirtualKeyCode::Comma => Some(",".into()),
        VirtualKeyCode::Period => Some(".".into()),
        VirtualKeyCode::Apostrophe => Some("'".into()),
        VirtualKeyCode::Colon => Some(":".into()),
        VirtualKeyCode::Semicolon => Some(";".into()),
        _ => None,
    }
}
