sudo: true
language: cpp
env:
  global:
    secure: FNZOWYO89qsT9kQKngrYbpnqCTMCSCSQ2rnZ3l17KHctOfS554TTDS+dfxPYz2XHm6azYDVcyBSs2gWJ6TmXZZZqEfr3X4VV4ooAa9PoeIkvVlT654zjZwxeXPYXrHFXZh/ImLUGWjsxRaUHYOv5SzyNGcZv07dtLKVd0ykhbH4=
matrix:
  include:
  - env: BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On RUN_TEST=On
    os: osx
    compiler: clang
  - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
    os: linux
    compiler: clang
    addons:
      apt:
        packages:
        - clang-3.7
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        - llvm-toolchain-precise
  - env: GCC_VERSION=4.9 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off RUN_TEST=On
    os: linux
    compiler: gcc
    addons:
      apt:
        packages:
        - g++-4.9
        sources:
        - ubuntu-toolchain-r-test
  - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On PROJECT=doc PUBLISH_DOCS=On
    os: linux
    compiler: clang
    addons:
      apt:
        packages:
        - clang-3.7
        - graphviz
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        - llvm-toolchain-precise
before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}";
    fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}";
    fi
  - which $CXX
  - which $CC
  ############################################################################
  # Install publish tools (doxygen)
  ############################################################################
  - |
    if [[ "$PUBLISH_DOCS" == "On" ]]; then
      sudo apt-add-repository -y ppa:libreoffice/libreoffice-4-2
      sudo apt-get update || echo "ignore update failure"
      sudo apt-get install doxygen
    fi
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir ${TRAVIS_BUILD_DIR}/cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/cmake
      export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}
    else
      xcode-select --install
      brew update || echo "suppress failures in order to ignore warnings"
      brew doctor || echo "suppress failures in order to ignore warnings"
      brew list cmake || echo "suppress failures in order to ignore warnings"
      sudo brew uninstall --force cmake || "suppress failures in order to ignore warnings"
      brew search cmake || echo "suppress failures in order to ignore warnings"
      brew install cmake || echo "suppress failures in order to ignore warnings"
      brew upgrade cmake || echo "suppress failures in order to ignore warnings"
    fi
  - cmake --version
  ############################################################################
  # Install LIBCXX
  ############################################################################
  - if [ -n "$CLANG_VERSION" ]; then sh projects/scripts/install_libcxx.sh; fi
install:
  - export CXX_FLAGS=""
  - export CXX_LINKER_FLAGS=""
  - if [ -z "$BUILD_TYPE" ]; then export BUILD_TYPE=Release; fi
  - if [ "$ASAN" == "On"]; then export CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined,integer
    -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
  - if [ -n "$CLANG_VERSION" ]; then CXX_FLAGS="${CXX_FLAGS} -D__extern_always_inline=inline";
    fi
  - if [ "$LIBCXX" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -stdlib=libc++ -I/usr/include/c++/v1/";
    fi
  - if [ "$LIBCXX" == "On" ]; then CXX_LINKER_FLAGS="${CXX_FLAGS} -L/usr/lib/ -lc++";
    fi
  - cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CXX_LINKER_FLAGS}"
script:
  - make VERBOSE=1 $PROJECT
  - |
    if [[ "$RUN_TEST" == "On" ]]; then
      cd build/test/
      ctest -V
      cd ../../
    fi
after_success:
  - |
    if [[ "$PUBLISH_DOCS" == "On" ]]; then
      sh projects/scripts/travis-doxygen.sh
    fi
branches:
  only:
  - master
notifications:
  email:
    recipients:
      - kirk.shoop@microsoft.com
    on_success: always
    on_failure: always
  slack: reactivex:eq4FFCchRIzufO2ZmpuuiJ9E
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/fcf05f21f5d4102e12e7
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
deploy:
  - provider: releases
    api_key:
      secure: sMyo0U4WxZ0kOlQ9SzKfeuU2/5y0Ngt8A0B0N6bb0TcGIyLhQv2q216Q+T0rkQKc04WnLY0Vr1/q9LonAA46nGq7zAiWcC3TY0zVUKRmKWrotQb/QqW1tvVEARKwG7CO+HCcGT3XCeM69XA/L7WiXRskTxS1+5Vy46/tVZBKofg=
    file: ''
    on:
      tags: true
      repo: Reactive-Extensions/RxCpp
